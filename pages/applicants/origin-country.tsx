/** @jsxImportSource theme-ui */

import { geoBertin1953 } from "d3-geo-projection";
import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { Container, Heading } from "theme-ui";
import Footer from "../../components/Footer";
import MapLayoutFluid from "../../components/map/layout/MapLayoutFluid";
import AlumniOrigin from "../../components/visuals/maps/AlumniOrigin";
import getCountries from "../../lib/data/getCountries";
import getApplicationLevels, {
  ApplicationLevels,
} from "../../lib/data/queries/application/getApplicationLevels";
import getCountryCodes from "../../lib/data/queries/country/getCountryCodes";
import getCountryWithApplicantCount, {
  CountryWithApplicantCount,
} from "../../lib/data/queries/country/getCountryWithApplicantCount";
import { SharedPageProps } from "../../types/Props";

type Props = {
  applicants: CountryWithApplicantCount;
  levels: ApplicationLevels;
} & SharedPageProps;

const Page: NextPage<Props> = ({ applicants, neCountriesTopoJson, levels }) => {
  const [level, setLevel] = useState<string | undefined>(undefined);

  return (
    <>
      <Head>
        <title>ITC&apos;s alumni country of origin </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container>
        <main>
          <Heading as="h1">Where do ITC&apos;s alumni come from?</Heading>

          <div sx={{ mb: 3 }}>
            <label>
              Select a level you want to filter for:
              <select
                sx={{ ml: 2 }}
                name="level"
                onChange={(event) => setLevel(event.target.value)}
                placeholder={"none selected"}
              >
                <option value={""}>All levels</option>
                {levels.map((d) => (
                  <option value={d.level ?? ""} key={d.level}>
                    {d.level}
                  </option>
                ))}
              </select>
            </label>
          </div>

          <div style={{ padding: "0 1em", width: "100%", height: "100%" }}>
            <MapLayoutFluid projection={geoBertin1953()}>
              <AlumniOrigin
                neCountriesTopoJson={neCountriesTopoJson}
                level={level}
                applicants={applicants}
              />
            </MapLayoutFluid>
          </div>
        </main>
      </Container>
      <Footer />
    </>
  );
};

export const getStaticProps: GetStaticProps<Props> = async () => {
  const [applicants, neCountriesTopoJson, countries, levels] =
    await Promise.all([
      getCountryWithApplicantCount(),
      getCountries(),
      getCountryCodes(),
      getApplicationLevels(),
    ]);

  return {
    props: {
      applicants,
      neCountriesTopoJson,
      countries,
      levels,
    },
  };
};

export default Page;
