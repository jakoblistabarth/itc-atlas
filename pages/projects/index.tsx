import type { NextPage } from "next";
import Head from "next/head";
import styles from "../../styles/home.module.css";
import BackToHome from "../../components/BackToHome";
import { Project } from "../../types/Project";
import getProjects from "../../lib/data/getProjects";
import Footer from "../../components/Footer";
import Heading, { Headings } from "../../components/Heading";
import LinkFramed from "../../components/LinkFramed";
import { nanoid } from "nanoid";
import * as aq from "arquero";
import SummaryTable from "../../components/SummaryTable";

import { AgGridReact } from "ag-grid-react";
import "ag-grid-community/styles/ag-grid.css";
import "ag-grid-community/styles/ag-theme-material.css";
import { ColDef } from "ag-grid-community";
import { useRouter } from "next/router";

type Props = React.PropsWithChildren<{
  projects: Project[];
}>;

const Travels: NextPage<Props> = ({ projects }) => {
  const { route } = useRouter();
  const links = [
    {
      href: `${route}/projects-timeline`,
      children: "Timeline",
    },
    {
      href: `${route}/projectcountries`,
      children: "Projects by Country",
    },
    {
      href: `${route}/projectsafrica`,
      children: "Sub-Saharan Africa",
    },
    {
      href: `${route}/naivasha`,
      children: "Naivasha Region",
    },
    {
      href: `${route}/project-explorer-3d`,
      children: "Projects Globe",
    },
    {
      href: `${route}/projects-spacetimecube`,
      children: "Projects Space Time Cube",
    },
  ];
  // const projectsDf = new DataFrame(projects);
  // const duplicates = projectsDf.findDuplicates("projectShortName");
  // const sum = duplicates.reduce((acc, [key, rows]) => {
  //   acc += rows.length;
  //   return acc;
  // }, 0);
  // console.log(duplicates, sum);

  const columnDefs: ColDef[] = [
    { field: "projectID" },
    { field: "projectName" },
    { field: "allCountries" },
    { field: "populatedPlaceNe" },
    { field: "type" },
    { field: "dateStart", filter: "agDateColumnFilter" },
    { field: "dateEnd", filter: "agDateColumnFilter" },
  ];

  const defaultColDef = {
    filter: true,
    sortable: true,
  };
  return (
    <>
      <Head>
        <title>ITC&apos;s projects</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Heading Tag={Headings.H1}>Projects</Heading>

        <p className={styles.description}>
          Insights into ITC&apos;s projects around the globe.
        </p>

        <div className={styles.grid}>
          {links.map((l) => (
            <LinkFramed key={nanoid()} href={l.href}>
              {l.children}
            </LinkFramed>
          ))}
        </div>
        <p>
          <BackToHome />
        </p>

        <SummaryTable data={aq.from(projects)} />
        <div className="ag-theme-material" style={{ width: 1280, height: 500 }}>
          <AgGridReact
            rowData={projects}
            columnDefs={columnDefs}
            defaultColDef={defaultColDef}
            pagination={true}
          />
        </div>
      </main>

      <Footer />
    </>
  );
};

export async function getStaticProps() {
  const projects = await getProjects();
  return {
    props: {
      projects,
    },
  };
}

export default Travels;
