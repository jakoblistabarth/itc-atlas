import type { NextPage } from "next";
import Head from "next/head";
import Timeline from "../../components/charts/timeline/Timeline";
import Heading, { Headings } from "../../components/Heading";
import getProjects from "../../lib/data/getProjects";
import styles from "../../styles/home.module.css";
import { Project } from "../../types/Project";
import { TimelineEvent } from "../../types/TimelineEvent";

type projectsTimelineProps = {
  projects: Project[];
};

// QUESTION: better to always use page for all pages?
const projectsTimeline: NextPage<projectsTimelineProps> = ({ projects }) => {
  // QUESTION: such filtering in static props or here?
  const projectsSelection = projects.filter(
    (
      row
    ): row is Omit<Project, "dateStart" | "dateEnd" | "projectID"> & {
      dateStart: string;
      dateEnd: string;
      projectID: string;
    } => typeof row.dateStart === "string" && typeof row.dateEnd === "string"
  );

  const events: TimelineEvent[] = projectsSelection.map((project) => ({
    name: project.projectShortName ?? "Unnamed Project",
    yOffset: project.projectID,
    dateStart: new Date(project.dateStart),
    dateEnd: new Date(project.dateEnd),
    data: project,
  }));

  const wrapper = {
      width: 1280,
      height: 3500,
    },
    margin = {
      top: 30,
      right: 30,
      bottom: 30,
      left: 30,
    },
    bounds = {
      width: wrapper.width - margin.left - margin.right,
      height: wrapper.height - margin.top - margin.bottom,
    };

  return (
    <>
      <Head>
        <title>Projects</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main className={styles.main}>
        <Heading Tag={Headings.H1}>Projects</Heading>
        <p>{projectsSelection.length} projects</p>
        <div style={{ overflowX: "scroll", maxHeight: "500px" }}>
          <svg width={wrapper.width} height={wrapper.height}>
            <Timeline
              position={[margin.left, margin.top]}
              width={bounds.width}
              height={bounds.height}
              events={events}
              grid
            />
          </svg>
        </div>
      </main>
    </>
  );
};

export const getStaticProps = async () => {
  const projects = await getProjects();

  return {
    props: {
      projects,
    },
  };
};

export default projectsTimeline;
