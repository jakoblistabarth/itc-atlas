import * as d3 from "d3";
import { geoPath } from "d3-geo";
import { geoBertin1953 } from "d3-geo-projection";
import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useRef } from "react";
import BaseMap from "../../components/map/BaseMap";
import styles from "../../styles/home.module.css";
import { Topology } from "topojson-specification";
import getFlights from "../../lib/getFlights";
import getCountries from "../../lib/getCountries";

type Props = {
  odMatrix: [];
  world: Topology;
};

const Flights: NextPage<Props> = ({ odMatrix, world }) => {
  const projection = geoBertin1953();
  const path = geoPath(projection);

  const svgRef = useRef(null);

  useEffect(() => {
    // setData(json.data)
    // setFilteredData(json.data)
    const svgEl = d3.select(svgRef.current);

    // Flows
    const routes = svgEl.append("g").attr("id", "routes");
    const flow = routes.selectAll("path").data(odMatrix);

    flow
      .enter()
      .append("path")
      .attr("d", path)
      .attr("stroke", "black")
      .attr("fill", "none")
      .attr("stroke-width", (d) => (10 * d.properties.value) / 100)
      .attr("value", (d) => d.value)
      .attr("class", "route");
  }, []);

  // const [selectedCountry, setSelectedCountry] = useState(null)
  // const [filterData, setFilteredData] = useState(null)
  // const [data, setData] = useState(null)

  //   setFilteredData(data.filter(d => d > selectedCountry))
  // }, [selectedCountry])

  return (
    <>
      <Head>
        <title>Flights</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main className={styles.main}>
        <h1>Flights</h1>
        <svg ref={svgRef} width={1020} height={600}>
          <BaseMap baseMapData={world} projection={projection} />
        </svg>

        {/* <select onChange={(e) => setSelectedCountry(e.target.value)}></select>
        <Navigation>
        <Flowmap thematicData={filteredData} geographicData="" />
        <Flowmap thematicData=" " geographicData="" /> */}
      </main>
    </>
  );
};

export async function getStaticProps() {
  const flights = await getFlights();
  const world = await getCountries();
  return {
    props: {
      odMatrix: flights.odMatrix,
      world,
    },
  };
}

export default Flights;
