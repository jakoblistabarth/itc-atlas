// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  code                   String         @id
  name                   String
  PhdCandidatesMain      PhdCandidate[] @relation("DepartmentPhdMain")
  PhdCandidatesSecondary PhdCandidate[] @relation("DepartmentPhdSecondary")
  Employee               Employee[]     @relation("DepartmentEmployee")
}

model Contact {
  id           String         @id
  itcStudentId String?        @unique
  gender       String?
  dateOfBirth  DateTime?      @db.Date
  countryId    Int?
  country      Country?       @relation("ContactNationality", fields: [countryId], references: [id])
  phd          PhdCandidate[] @relation("ContactPhd")
  Employee     Employee[]     @relation("ContactEmployee")
}

model PhdCandidate {
  id                      Int         @id @default(autoincrement())
  itcStudentId            String?
  Contact                 Contact?    @relation("ContactPhd", fields: [itcStudentId], references: [itcStudentId])
  departmentMainCode      String?
  departmentMain          Department? @relation("DepartmentPhdMain", fields: [departmentMainCode], references: [code])
  departmentSecondaryCode String?
  departmentSecondary     Department? @relation("DepartmentPhdSecondary", fields: [departmentSecondaryCode], references: [code])
  thesisTitle             String?
  graduated               Boolean?
  start                   DateTime?   @db.Date
  graduation              DateTime?   @db.Date
  promotion               DateTime?   @db.Date
  country                 Country?    @relation("PhdCountry", fields: [countryId], references: [id])
  countryId               Int?
}

model Employee {
  id             Int         @id
  start          DateTime?   @db.Date
  end            DateTime?   @db.Date
  departmentCode String?
  department     Department? @relation("DepartmentEmployee", fields: [departmentCode], references: [code])
  contactId      String?
  Contact        Contact?    @relation("ContactEmployee", fields: [contactId], references: [id])
  dateOfBirth    DateTime?   @db.Date
  countryId      Int?
  country        Country?    @relation("EmployeeCountry", fields: [countryId], references: [id])
}

model Country {
  id                       Int            @id @default(autoincrement())
  IsoAlpha2                String         @db.Char(2)
  IsoAlpha3                String         @db.Char(3)
  IsoNum3                  String?        @db.Char(3)
  NameEn                   String?
  NameLongEn               String         @db.Text
  UnRegionCode             String         @db.Char(3)
  UnSubRegionCode          String         @db.Char(3)
  UnIntermediateRegionCode String?        @db.Char(3)
  Ldc                      Boolean
  Lldc                     Boolean
  Sids                     Boolean
  PhdCandidates            PhdCandidate[] @relation("PhdCountry")
  Contacts                 Contact[]      @relation("ContactNationality")
  Employee                 Employee[]     @relation("EmployeeCountry")
}
